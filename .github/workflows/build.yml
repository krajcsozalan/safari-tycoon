name: Build and release
on:
  push:
    branches: main
jobs:
  build:
    strategy:
      matrix:
        targetPlatform: [StandaloneWindows64, StandaloneLinux64]
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Cache Library folder
        uses: actions/cache@v4
        with:
          path: Library
          key: Library-${{ runner.os }}-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-${{ runner.os }}-
      - name: Build project
        id: buildStep
        uses: game-ci/unity-builder@v4
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
      - name: Upload build
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}
  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .git
      - name: Download build
        uses: actions/download-artifact@v4
        with:
          path: build
      - name: Package build
        working-directory: build
        run: |
          for TARGET in *; do zip -r ../$TARGET.zip $TARGET; done
      - name: Create release
        run: |
          npx semantic-release@24
        env:
          GH_TOKEN: ${{ github.token }}

